package com.tacohen.killbots.UI;

import java.util.concurrent.CountDownLatch;

import com.tacohen.cloud.Cloud;
import com.tacohen.killbots.R;

import android.app.Activity;
import android.content.Intent;
import android.os.Bundle;
import android.os.HandlerThread;
import android.util.Log;
import android.widget.Toast;

public class GameFinish extends Activity{
	
	private static String TAG = "GameFinish";
	private Integer place;
	private Integer score;
	private Boolean isScoreHigh;
	private Boolean didWin;
	
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.cloud_communication);
		
		Bundle extras = getIntent().getExtras();
		score = extras.getInt("score");
		didWin = extras.getBoolean("didWin");
		
		if(didWin){
			win();
		}else{
			lose();
		}
	}
	
	public void lose(){
		Log.i(TAG, "Player has lost!");
		this.runOnUiThread(new Runnable() {
	        @Override
	        public void run() {
	    		Toast.makeText(getApplicationContext(), "You Died! Your score is: "+score, Toast.LENGTH_LONG).show();
	    		Log.i(TAG, "Is this a high score? "+IsScoreHigh());
	    		if (IsScoreHigh()){
		    		Toast.makeText(getApplicationContext(), "You got a High Score!", Toast.LENGTH_LONG).show();
		    		Intent i = new Intent(GameFinish.this,AddHighScore.class);
	                i.putExtra("score", score);
	                i.putExtra("place", GetPlace());
		    		startActivityForResult(i,0);
	    		}
	    		
	        }
	    });
	}
	
	public void win(){
		Log.i(TAG, "Player has won!");
		this.runOnUiThread(new Runnable() {
	        @Override
	        public void run() {
	    		Toast.makeText(getApplicationContext(), "You Won! Your score is: "+score, Toast.LENGTH_LONG).show();
	    		Log.i(TAG, "Is this a high score? "+IsScoreHigh());
	    		if (IsScoreHigh()){
		    		Toast.makeText(getApplicationContext(), "You got a High Score!", Toast.LENGTH_LONG).show();
		    		Intent i = new Intent(GameFinish.this,AddHighScore.class);
	                i.putExtra("score", score);
	                i.putExtra("place", GetPlace());
		    		startActivityForResult(i,0);
	    		}
	    		//popUp.dismiss();
	        }
	    });
	}
	
	public Boolean IsScoreHigh(){
		final CountDownLatch latch = new CountDownLatch(1);
	    Thread scoreThread = new HandlerThread("ScoreHandler"){
	        @Override
	        public synchronized void run(){
	            Cloud c = new Cloud();
	            isScoreHigh = c.isHighScore(score);
	            latch.countDown(); // Release await() in the UI thread.
	        }
	    };
	    scoreThread.start();
	    try {
			latch.await();
		} catch (InterruptedException e) {
			Log.e(TAG, "Interrupted contecting cloud!");
			isScoreHigh = false;//Assume false if we can't get actual value
		} // Wait for countDown() in the thread
	    return isScoreHigh;
	}
	
	public Integer GetPlace(){
		final CountDownLatch latch = new CountDownLatch(1);
	    Thread scoreThread = new HandlerThread("ScoreHandler"){
	        @Override
	        public synchronized void run(){
	            Cloud c = new Cloud();
	            place = c.getPlace(score);
	            latch.countDown(); // Release await() in the UI thread.
	        }
	    };
	    scoreThread.start();
	    try {
			latch.await();
		} catch (InterruptedException e) {
			Log.e(TAG, "Interrupted contecting cloud!");
			place = 6;//Assume 6 if we can't get actual value
		} // Wait for countDown() in the thread
	    return place;
	}

}
